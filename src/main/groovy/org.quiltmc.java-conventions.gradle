import java.util.regex.Matcher
import java.util.regex.Pattern

plugins {
    id 'org.quiltmc.generic-java-conventions'
    id 'com.diffplug.spotless'
}

def beforePattern = Pattern.compile("(?<=\\n)([\\t]+)([^\\/\\r\\n \\t][^\\r\\n]*|\\/[^\\/\\r\\n][^\\r\\n]*|[^\\/\\r\\n][^\\r\\n]*(\\r?\\n\\1\\/\\/[^\\r\\n]*)+)\\r?\\n\\1(|(if|do|while|for|try)[^\\r\\n]+)\\{[\\t ]*\\r?\\n")
def afterPattern = Pattern.compile("(?<=\\n)([\\t]+)(\\})\\r?\\n\\1(?:[^\\r\\n\\}cd]|c[^\\r\\na]|ca[^\\r\\ns]|d[^\\r\\ne]|de[^\\r\\nf])")
spotless {
    java {
        eclipse().configFile("codeformat/eclipse.xml")
        licenseHeaderFile(project.file("codeformat/HEADER")).yearSeparator(", ")
        addStep(org.quiltmc.gradleconventionplugins.BraceSpacingStep.create())
    }
}
jar {
    manifest {
        attributes["Specification-Title"] = project.name
        attributes["Specification-Version"] = project.version
        attributes["Specification-Vendor"] = project.group
        attributes["Implementation-Title"] = project.name
        attributes["Implementation-Version"] = project.version
        attributes["Implementation-Vendor"] = project.group
    }
}